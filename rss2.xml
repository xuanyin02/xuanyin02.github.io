<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>宣胤星球</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>人生总是充满遗憾，学会在遗憾中成长</description>
    <pubDate>Sun, 23 Apr 2023 09:01:09 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>web-experiment</title>
      <link>http://example.com/2023/04/23/web-experiment/</link>
      <guid>http://example.com/2023/04/23/web-experiment/</guid>
      <pubDate>Sun, 23 Apr 2023 08:26:26 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;1、修改css&amp;#x2F;main.css文件调整oscarlist.html中的表格样式&lt;/p&gt;
&lt;p&gt;(1) 将所有偶数行背景色改为#dddddd&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</description>
        
      
      
      
      <content:encoded><![CDATA[<p>1、修改css&#x2F;main.css文件调整oscarlist.html中的表格样式</p><p>(1) 将所有偶数行背景色改为#dddddd</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main_table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n)&#123;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#dddddd</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(2) 利用CSS伪类选择器，鼠标移上偶数行背景色改为#3dc1f1，鼠标移上奇数行背景色改为#bbedff</p><p>使用的伪类构造器是:hover</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main_table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n)<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3dc1f1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main_table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n-<span class="number">1</span>)<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bbedff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、引用jQuery包，编写jQuery代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.1.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为表格添加最后一列，该列所有单元格均放置一个“查看”链接，点击链接后在新页面打开detail.html，并构造get参数放入链接所在行所有的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​    $(<span class="string">&quot;tr:gt(0)&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;  <span class="comment">//gt(0)指从第二行开始到最后一行</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      <span class="keyword">var</span> url = <span class="string">&quot;detail.html&quot;</span> <span class="comment">//构造url即get参数</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      url += <span class="string">&quot;?year=&quot;</span> + $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&quot;td&quot;</span>).<span class="title function_">eq</span>(<span class="number">0</span>).<span class="title function_">text</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      url += <span class="string">&quot;&amp;number=&quot;</span> + <span class="built_in">encodeURIComponent</span>($(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&quot;td&quot;</span>).<span class="title function_">eq</span>(<span class="number">1</span>).<span class="title function_">text</span>());</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      url += <span class="string">&quot;&amp;cnname=&quot;</span> + <span class="built_in">encodeURIComponent</span>($(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&quot;td&quot;</span>).<span class="title function_">eq</span>(<span class="number">2</span>).<span class="title function_">text</span>());</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      url += <span class="string">&quot;&amp;enname=&quot;</span> + <span class="built_in">encodeURIComponent</span>($(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&quot;td&quot;</span>).<span class="title function_">eq</span>(<span class="number">3</span>).<span class="title function_">text</span>());</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      url += <span class="string">&quot;&amp;showyear=&quot;</span> + $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&quot;td&quot;</span>).<span class="title function_">eq</span>(<span class="number">4</span>).<span class="title function_">text</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​      $(<span class="variable language_">this</span>).<span class="title function_">append</span>(<span class="string">&quot;&lt;td&gt;&lt;a href=&#x27;&quot;</span>+url+<span class="string">&quot;&#x27; target=&#x27;_blank&#x27;&gt;查看&lt;/a&gt;&lt;/td&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参数说明：year获奖年份，number届数，cnname影片中文名，enname影片英文名，showyear上映年份（number、cnname、enname进行了UrlEncode编码）</p><p>3、修改detail.html代码，引用jQuery包，编写jQuery代码</p><p>(1) 接收URL中的get参数，原理：先提取URL，然后再使用正则表达式识别URL中的各参数值</p><p>(2) 通过jQuery的html方法将所有的get参数渲染到表格对应的单元格中，再将影片的中文名写入到网页的title中</p><p>(3) 通过jQuery显示对应的剧照图片，只需修改图片的src属性即可，图片路径格式为”images&#x2F;获奖年份.jpg”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.1.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    <span class="keyword">var</span> parms = <span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>)[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    year = parms[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    $(<span class="string">&quot;#year&quot;</span>).<span class="title function_">html</span>(year)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    <span class="keyword">if</span> (year == <span class="number">2023</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ​      $(<span class="string">&quot;#moviepic&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;images/&quot;</span>+<span class="number">2023</span>+<span class="string">&quot;.png&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ​    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ​      $(<span class="string">&quot;#moviepic&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;images/&quot;</span>+year+<span class="string">&quot;.jpg&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ​    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    number = <span class="built_in">decodeURIComponent</span>(parms[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    $(<span class="string">&quot;#number&quot;</span>).<span class="title function_">html</span>(number)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    cnname = <span class="built_in">decodeURIComponent</span>(parms[<span class="number">2</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    $(<span class="string">&quot;#cnname&quot;</span>).<span class="title function_">html</span>(cnname)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    $(<span class="string">&quot;title&quot;</span>).<span class="title function_">html</span>(cnname)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    enname = <span class="built_in">decodeURIComponent</span>(parms[<span class="number">3</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    $(<span class="string">&quot;#enname&quot;</span>).<span class="title function_">html</span>(enname)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    showyear = parms[<span class="number">4</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        ​    $(<span class="string">&quot;#showyear&quot;</span>).<span class="title function_">html</span>(showyear)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先还是引入jQuery包</p><p>然后使用document.location.href方法提取url</p><p>使用split方法根据分隔符“?”获取到参数数组</p><p>再次使用split方法根据分隔符“&amp;”和“&#x3D;”获取到每个属性值</p><p>使用jQuery函数中的html方法根据id将所有的get参数渲染到表格对应的单元格中，根据标签“title”将影片的中文名写入到网页的title中</p><p>由于文件中2023年的电影剧照图片存储格式为png，所以需要判断年份，根据年份的不同，使用jQuery函数的attr方法设置不同是值</p><p><strong>1<strong><strong>、修改实验</strong></strong>3****代码，制作同步注册功能</strong></p><p>(1) 将实验3的main.html复制成main_sync.html，参考《实验5_Web接口文档》1.2节，为对应的表单控件添加name属性（同步提交时，控件的name值与服务器收到的参数名一一对应）；将注册按钮类型改为submit；再添加一个form标记将所有表单控件包围</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://43.136.217.18:8081/registSync&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-left&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;content-right&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nameIpt&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;phone&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-left&quot;</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;content-right&quot;</span> <span class="attr">id</span>=<span class="string">&quot;telIpt&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-left&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;content-right&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pwdIpt&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;confirmPwd&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-left&quot;</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;content-right&quot;</span> <span class="attr">id</span>=<span class="string">&quot;confirmPwdIpt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请确认密码&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;regist&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>2<strong><strong>、修改实验</strong></strong>3<strong><strong>代码，制作异步（</strong></strong>AJAX****）注册功能</strong></p><p>(1) 将实验3的main.html复制成main_async.html，参考《实验5_Web接口文档》2.2节中的参数名，提取用户名、手机号和密码框中的值并构造成参数对象，对象属性和参数名一一对应</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&quot;#regist&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> errMsg = <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//验证输入</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> ($(<span class="string">&quot;#nameIpt&quot;</span>).<span class="title function_">val</span>() == <span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          errMsg = <span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">else</span> <span class="keyword">if</span> ($(<span class="string">&quot;#telIpt&quot;</span>).<span class="title function_">val</span>() == <span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          errMsg = <span class="string">&quot;请输入手机号&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (errMsg != <span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//显示错误</span></span></span><br><span class="line"><span class="language-javascript">          $(<span class="string">&quot;#errorArea&quot;</span>).<span class="title function_">text</span>(errMsg)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//通过输入检查，开始提交数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> paras = &#123;<span class="attr">name</span>:$(<span class="string">&quot;#nameIpt&quot;</span>).<span class="title function_">val</span>(), <span class="attr">phone</span>:$(<span class="string">&quot;#telIpt&quot;</span>).<span class="title function_">val</span>(), <span class="attr">password</span>:$(<span class="string">&quot;#pwdIpt&quot;</span>).<span class="title function_">val</span>()&#125;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//执行提交</span></span></span><br><span class="line"><span class="language-javascript">          $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&quot;http://43.136.217.18:8081/registAsync&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:paras,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:<span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">dataType</span>:<span class="string">&quot;json&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//访问成功，解析json</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">if</span>(data.<span class="property">state</span> == <span class="string">&quot;SUC&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//跳转到success.html</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&quot;http://43.136.217.18:8081/success.html&quot;</span></span></span><br><span class="line"><span class="language-javascript">              &#125;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//显示出错信息</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;访问成功，但是出错&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">              &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//访问失败</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">error</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">//显示”无法连接到服务器“</span></span></span><br><span class="line"><span class="language-javascript">              <span class="title function_">alert</span>(<span class="string">&quot;无法连接到服务器&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改浏览器URL即可完成跳转，如：window.location.href&#x3D;”新页面URL”</p><p><strong>1****、设计词典布局（美观即可，不要求按设计图精确布局）</strong></p><p>（1）创建网页，创建网页文件dict.html。</p><p>（2）网页布局</p><p>使用div+css按图1进行布局，风格为手机网页，文本框和下面内容区域宽度自适应，搜索按钮宽度固定，搜索栏固定到屏幕最上方。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#wordArea</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#resultArea</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wordArea&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;enWord&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入英文词汇&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;searchArea&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;searchWord&quot;</span> <span class="attr">value</span>=<span class="string">&quot;查词&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;resultArea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2****、词典页面操作典事件编程</strong></p><p>（1）相似词汇显示</p><p>当文本框发生改变时显示相似词汇</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#wordArea input&quot;).on(&quot;input&quot;, function () &#123;</span><br><span class="line">                //this哪个dom元素触发的事件</span><br><span class="line">                //$(this)将dom元素转为jQuery对象</span><br><span class="line">                var wordClip = $(this).val();</span><br><span class="line">                //发起ajax请求，查询相似词汇</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: &quot;http://43.136.217.18:8081/getSimilarWords&quot;,</span><br><span class="line">                    data: &#123; word: wordClip, max: 20 &#125;,</span><br><span class="line">                    dataType: &quot;json&quot;,</span><br><span class="line">                    success: function (data) &#123;</span><br><span class="line">                        //解析json</span><br><span class="line">                        if (data.state == &quot;SUC&quot;) &#123;</span><br><span class="line">                            var htmlCode = &quot;<span class="tag">&lt;<span class="name">ul</span>&gt;</span>&quot;;</span><br><span class="line">                            for (var i in data.content) &#123;</span><br><span class="line">                                htmlCode += &quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span>&quot; + data.content[i] + &quot;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;;</span><br><span class="line">                            &#125;</span><br><span class="line">                            htmlCode += &quot;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span>&quot;;</span><br><span class="line">                            $(&quot;#resultArea&quot;).html(htmlCode)</span><br><span class="line">                            $(&quot;#resultArea li&quot;).click(function () &#123;</span><br><span class="line">                                var word = $(this).text();</span><br><span class="line">                                search(word);</span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            alert(data.msg)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    error: function () &#123;</span><br><span class="line">                        alert(&quot;系统错误消息&quot;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><p><strong>2****）查询词汇结果显示</strong></p><p>点击图2中的“查词按钮”，按文本框中的词汇进行查询；点击图2中相似词汇列表中的项目，按列表项中的词汇进行查询</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">function search(word) &#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: &quot;http://43.136.217.18:8081/getWordDetail&quot;,</span><br><span class="line">                data: &#123; word: word &#125;,</span><br><span class="line">                dataType: &quot;json&quot;,</span><br><span class="line">                success: function (resp) &#123;</span><br><span class="line">                    if (resp.state == &quot;SUC&quot;) &#123;</span><br><span class="line">                        //console.log(resp.content)</span><br><span class="line">                        var htmlCode = &quot;<span class="tag">&lt;<span class="name">ul</span>&gt;</span>&quot;;</span><br><span class="line">                        for (var j=0;j&lt;resp.content.length;j++)&#123;</span><br><span class="line">                            var eng = resp.content[j].eng</span><br><span class="line">                            var trans = resp.content[j].trans;</span><br><span class="line">                            for (var i=0;i&lt;trans.length;i++)&#123;</span><br><span class="line">                                var pos = trans[i].pos;</span><br><span class="line">                                pos = pos.join(&quot;&amp;&quot;)</span><br><span class="line">                                var chn = trans[i].chn;</span><br><span class="line">                                htmlCode += &quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span>&quot;+eng+&quot; &quot;+pos+&quot; &quot;+chn+&quot;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        htmlCode += &quot;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span>&quot;</span><br><span class="line">                        console.log(htmlCode);</span><br><span class="line">                        $(&quot;#resultArea&quot;).html(htmlCode)</span><br><span class="line">                    &#125;</span><br><span class="line">                    else &#123;</span><br><span class="line">                        alert(resp.msg)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                error: function () &#123;</span><br><span class="line">                    alert(&quot;系统错误消息&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"> $(&quot;#searchWord&quot;).click(function()&#123;</span><br><span class="line">       var word = $(&quot;#enWord&quot;).val()</span><br><span class="line">       search(word);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_52566185/article/details/130306648?ops_request_misc=%7B%22request_id%22:%22168224031916800225594774%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=168224031916800225594774&biz_id=0&utm_medium=distribute.pc_chrome_plugin_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-130306648-null-null.nonecase&utm_term=%E8%80%83%E8%AF%95%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%9312138&spm=1018.2226.3001.4187">(20条消息) 考试知识点总结12138_biu～～酱的博客-CSDN博客</a></p><p><a href="https://www.bilibili.com/video/BV1Jg4y1B7n4/?p=36&spm_id_from=pageDriver&vd_source=a50b239bf10e50694c7aed75933d158f">jQuery-36-级联查询ajax请求省份数据_哔哩哔哩_bilibili</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/web/">web</category>
      
      
      <category domain="http://example.com/tags/%E6%B5%8B%E8%AF%95/">测试</category>
      
      
      <comments>http://example.com/2023/04/23/web-experiment/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo上传的图片在网页上无法显示的解决办法</title>
      <link>http://example.com/2023/04/23/Hexo%E4%B8%8A%E4%BC%A0%E7%9A%84%E5%9B%BE%E7%89%87%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%8A%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <guid>http://example.com/2023/04/23/Hexo%E4%B8%8A%E4%BC%A0%E7%9A%84%E5%9B%BE%E7%89%87%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%8A%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <pubDate>Sun, 23 Apr 2023 07:18:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/.com//image-20230423152015298.png&quot; alt=&quot;image-20230423152015298.&quot;&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/.com//image-20230423152015298.png" alt="image-20230423152015298."></p>]]></content:encoded>
      
      
      
      <category domain="http://example.com/tags/%E6%B5%8B%E8%AF%95/">测试</category>
      
      
      <comments>http://example.com/2023/04/23/Hexo%E4%B8%8A%E4%BC%A0%E7%9A%84%E5%9B%BE%E7%89%87%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%8A%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>关于消息队列Kafka知识的学习</title>
      <link>http://example.com/2023/04/20/%E5%85%B3%E4%BA%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97Kafka%E7%9F%A5%E8%AF%86%E7%9A%84%E5%AD%A6%E4%B9%A0/</link>
      <guid>http://example.com/2023/04/20/%E5%85%B3%E4%BA%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97Kafka%E7%9F%A5%E8%AF%86%E7%9A%84%E5%AD%A6%E4%B9%A0/</guid>
      <pubDate>Thu, 20 Apr 2023 03:17:51 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Kafka是一项非常重要的消息队列技术，在大数据场景中被主要采用。&lt;/p&gt;
&lt;h3 id=&quot;第1章-Kafka概述&quot;&gt;&lt;a href=&quot;#第1章-Kafka概述&quot; class=&quot;headerlink&quot; title=&quot;第1章 Kafka概述&quot;&gt;&lt;/a&gt;第1章 Kafka概述&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Kafka是一项非常重要的消息队列技术，在大数据场景中被主要采用。</p><h3 id="第1章-Kafka概述"><a href="#第1章-Kafka概述" class="headerlink" title="第1章 Kafka概述"></a>第1章 Kafka概述</h3><h4 id="1-1-Kafka的定义"><a href="#1-1-Kafka的定义" class="headerlink" title="1.1 Kafka的定义"></a>1.1 Kafka的定义</h4><p>Kafka传统定义：Kafka是一个分布式的基于发布&#x2F;订阅模式的消息队列（Message Queue），主要应用于大数据实时处理领域。</p><p>发布&#x2F;订阅：消息的发布者不会将消息直接发送给特定的订阅者，而是将发布的消息分为不同的类别，订阅者只接收感兴趣的消息。</p><p><img src="/.com//Users\28331\AppData\Roaming\Typora\typora-user-images\image-20230420120502679.png" alt="image-20230420120502679"></p><p>Kafka最新定义：Kafka是一个开源的分布式事件流平台，被数千家公司用于高性能数据管道、流分析、数据集成和关键任务应用。</p><h4 id="1-2-传统消息队列的主要应用场景"><a href="#1-2-传统消息队列的主要应用场景" class="headerlink" title="1.2 传统消息队列的主要应用场景"></a>1.2 传统消息队列的主要应用场景</h4><p>主要应用场景包括：缓冲&#x2F;消峰，解耦，异步通信</p><img src="/.com//Users\28331\AppData\Roaming\Typora\typora-user-images\image-20230420113210146.png" alt="image-20230420113210146" style="zoom: 80%;"><img src="/.com//Users\28331\AppData\Roaming\Typora\typora-user-images\image-20230420113250219.png" alt="image-20230420113250219" style="zoom: 80%;"><img src="/.com//Users\28331\AppData\Roaming\Typora\typora-user-images\image-20230420113310640.png" alt="image-20230420113310640" style="zoom: 80%;"><h4 id="1-3-Kafka的特点"><a href="#1-3-Kafka的特点" class="headerlink" title="1.3 Kafka的特点"></a>1.3 Kafka的特点</h4><ul><li>高吞吐量、低延迟：Kafka每秒可以处理几十万条消息，它的延迟最低只有几毫秒，每个topic可以分为多个partition，由多个consumer group对partition进行consume操作</li><li>可扩展性：Kafka集群支持热扩展。</li><li>持久性、可靠性：消息被持久化到本地磁盘，并且支持数据备份防止数据丢失。</li><li>容错性：允许集群中有节点失败（若副本数量为n，则允许n-1个节点失败）</li><li>高并发：支持数千个客户端同时读写</li></ul><p>综合传统消息队列的主要应用场景和Kafka的特点，Kafka起到的作用可以归纳为：消峰填谷，解耦！在大数据流式计算领域中，Kafka主要作为计算机系统的前置缓存和输出结果缓存。其扮演的角色通常为：存储系统（持久性）；消息系统；流处理平台。</p><h4 id="1-4-Kafka的基础架构"><a href="#1-4-Kafka的基础架构" class="headerlink" title="1.4 Kafka的基础架构"></a>1.4 Kafka的基础架构</h4><img src="/.com//Users\28331\AppData\Roaming\Typora\typora-user-images\image-20230420115303092.png" alt="image-20230420115303092" style="zoom:80%;"><ol><li>Producer：消息生产者，就是向Kafka broker发消息的客户端</li><li>Consumer：消息消费者，向Kafka broker取消息的客户端</li><li>Consumer Group（CG）：消费者组，由多个consumer组成。消费者组内每个消费者负责消费不同分区的数据，一个分区只能由一个组内消费者消费；消费者组之间互不影响。所有的消费者都属于某个消费者组，即消费者组是一个逻辑上的一个订阅者</li><li>Broker：一台Kafka服务器就是一个broker。一个集群由多个broker组成。一个broker可以容纳多个topic</li><li>Topic：可以理解为一个队列，生产者和消费者面向的都是一个topic</li><li>Partition：为了实现扩展性，一个非常大的tipic可以分布到多个broker（即服务器）上，一个topic可以分为多个partition，每个partition是一个有序的队列</li><li>Replica：副本。一个topic的每个分区都有若干个副本，一个Leader和若干个Follower</li><li>Leader：每个分区多个副本的“主”，生产者发送数据的对象，以及消费数据的对象都是Leader</li><li>Follower：每个分区多个副本的“从”，实时从Leader中同步数据，保持和Leader数据的同步。Leader发生故障时，某个Follower会成为新的Leader</li></ol><h3 id="第2章-Kafka命令行操作"><a href="#第2章-Kafka命令行操作" class="headerlink" title="第2章 Kafka命令行操作"></a>第2章 Kafka命令行操作</h3><h4 id="2-1-主题命令行操作"><a href="#2-1-主题命令行操作" class="headerlink" title="2.1 主题命令行操作"></a>2.1 主题命令行操作</h4><ul><li><p>查看当前服务器中的所有topic                                                                                                                                             bin&#x2F;kafka-topics.sh –bootstrap-server 节点名称:9092 –list</p></li><li><p>创建主题</p><p>bin&#x2F;kafka-topics.sh –bootstrap-server 节点名称:9092 –create –partitions 分区数 –replication-factor 副本数 –topic 主题名称</p></li><li><p>查看指定主题详情</p><p>bin&#x2F;kafka-topics.sh –bootstrap-server 节点名称:9092 –describe –topic 主题名称</p></li><li><p>修改主题分区数</p><p>bin&#x2F;kafka-topics.sh –bootstrap-server 节点名称:9092 –alter –topic 主题名称 –partitions 修改后的分区数</p></li><li><p>删除主题</p><p>bin&#x2F;kafka-topics.sh –bootstrap-server 节点名称:9092 –delete –topic 主题名称</p></li></ul><h4 id="2-2-生产者命令行操作"><a href="#2-2-生产者命令行操作" class="headerlink" title="2.2 生产者命令行操作"></a>2.2 生产者命令行操作</h4><ul><li><p>发送消息</p><p>bin&#x2F;kafka-console-producer.sh  –bootstrap-server 节点名称:9092 –topic 主题名称</p></li></ul><h4 id="2-3-消费者命令行操作"><a href="#2-3-消费者命令行操作" class="headerlink" title="2.3 消费者命令行操作"></a>2.3 消费者命令行操作</h4><ul><li><p>消费指定主题中的消息</p><p>bin&#x2F;kafka-console-consumer.sh  –bootstrap-server 节点名称:9092 –topic 主题名称</p></li><li><p>把该主题中的所有数据读取出来（包括历史数据）</p><p>bin&#x2F;kafka-console-consumer.sh  –bootstrap-server 节点名称:9092 –from-beginning –topic 主题名称</p></li></ul><h3 id="第3章-Kafka生产者"><a href="#第3章-Kafka生产者" class="headerlink" title="第3章 Kafka生产者"></a>第3章 Kafka生产者</h3><h4 id="3-1-生产者消息发送流程"><a href="#3-1-生产者消息发送流程" class="headerlink" title="3.1 生产者消息发送流程"></a>3.1 生产者消息发送流程</h4><p>在消息发送的过程中，涉及到了两个线程–main线程和sender线程。在main线程中创建了一个双端队列RecordAccumulator。main线程将消息发送到RecordAccumulator，sender线程不断从RecordAccumulator中拉取消息发送到Kafka Broker</p><p><img src="/.com//Users\28331\AppData\Roaming\Typora\typora-user-images\image-20230420164903715.png" alt="image-20230420164903715"></p><p>ISR队列：Leader以及与Leader保持同步的Follower的正常存活副本队列</p><blockquote><p>注意：即使acks&#x3D;-1，也不能完全保证数据发送的100%完整性？因为，如果服务端目标partition的同步副本只有Leader自己了，此时，它受到数据就会给生产者反馈成功。但是一旦反馈之后就宕机，数据还未被持久化，则完整性不能得到保证</p></blockquote><p>注意：消息发送失败会自动重试，不需要我们在回调函数中手动重试</p><h4 id="3-2-异步发送API"><a href="#3-2-异步发送API" class="headerlink" title="3.2 异步发送API"></a>3.2 异步发送API</h4><p>创建MAVEN项目</p><p>导入Kafka依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;kafka-clients&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>创建并配置 Kafka 生产者的配置对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建 kafka 生产者的配置对象</span></span><br><span class="line"><span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line"><span class="comment">// 2. 给 kafka 配置对象添加配置信息：bootstrap.servers</span></span><br><span class="line">properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,</span><br><span class="line"><span class="string">&quot;hadoop102:9092&quot;</span>);</span><br><span class="line"><span class="comment">// key,value 序列化（必须）：key.serializer，value.serializer</span></span><br><span class="line">properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG,</span><br><span class="line"><span class="string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);</span><br><span class="line">properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG,</span><br><span class="line"><span class="string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);</span><br><span class="line"><span class="comment">// 3. 创建 kafka 生产者对象</span></span><br><span class="line">KafkaProducer&lt;String,  String&gt;  kafkaProducer  =  <span class="keyword">new</span></span><br><span class="line"><span class="title class_">KafkaProducer</span>&lt;String, String&gt;(properties);</span><br></pre></td></tr></table></figure><h5 id="3-2-1-不带回调函数的API代码"><a href="#3-2-1-不带回调函数的API代码" class="headerlink" title="3.2.1 不带回调函数的API代码"></a>3.2.1 不带回调函数的API代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4. 调用 send 方法,发送消息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">kafkaProducer.send(<span class="keyword">new</span> <span class="title class_">ProducerRecord</span>&lt;&gt;(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;atguigu &quot;</span> + i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-带回调函数的API代码"><a href="#3-2-2-带回调函数的API代码" class="headerlink" title="3.2.2 带回调函数的API代码"></a>3.2.2 带回调函数的API代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4. 调用 send 方法,发送消息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 添加回调</span></span><br><span class="line">kafkaProducer.send(<span class="keyword">new</span>  <span class="title class_">ProducerRecord</span>&lt;&gt;(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;atguigu &quot;</span> + i), </span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line"><span class="comment">// 该方法在 Producer 收到 ack 时调用，为异步调用</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompletion</span><span class="params">(RecordMetadata metadata,Exception exception)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (exception == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">// 没有异常,输出信息到控制台</span></span><br><span class="line">System.out.println(<span class="string">&quot; 主 题 ： &quot;</span>  +</span><br><span class="line">metadata.topic() + <span class="string">&quot;-&gt;&quot;</span> + <span class="string">&quot;分区：&quot;</span> + metadata.partition());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 出现异常打印</span></span><br><span class="line">exception.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="comment">// 延迟一会会看到数据发往不同分区</span></span><br><span class="line">Thread.sleep(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回调函数会在 producer 收到 ack 时调用，为异步调用，该方法有两个参数，分别是元<br>数据信息（RecordMetadata）和异常信息（Exception），如果 Exception 为 null，说明消息发<br>送成功，如果 Exception 不为 null，说明消息发送失败</p><h4 id="3-3-同步发送API"><a href="#3-3-同步发送API" class="headerlink" title="3.3 同步发送API"></a>3.3 同步发送API</h4><p>只需在异步发送的基础上，调用一下get()方法即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4. 调用 send 方法,发送消息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 同步发送</span></span><br><span class="line">kafkaProducer.send(<span class="keyword">new</span> <span class="title class_">ProducerRecord</span>&lt;&gt;(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;kafka&quot;</span> + i)).get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：不论是异步发送还是同步发送，都还有非常重要的一步：关闭资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 5. 关闭资源</span></span><br><span class="line">kafkaProducer.close();</span><br></pre></td></tr></table></figure><h4 id="3-4-生产者分区"><a href="#3-4-生产者分区" class="headerlink" title="3.4 生产者分区"></a>3.4 生产者分区</h4><h5 id="3-4-1-分区好处"><a href="#3-4-1-分区好处" class="headerlink" title="3.4.1 分区好处"></a>3.4.1 分区好处</h5><ol><li>便于合理使用存储资源，每个partition在一个Broker上存储，可以把海量的数据按照分区切割成一块一块存储在多台Broker上。合理控制分区的任务，可以实现负载均衡的效果</li><li>提高并行度，生产者可以以分区为单位发送数据；消费者可以以分区为单位消费数据</li></ol><h5 id="3-4-2-生产者发送消息的分区策略"><a href="#3-4-2-生产者发送消息的分区策略" class="headerlink" title="3.4.2 生产者发送消息的分区策略"></a>3.4.2 生产者发送消息的分区策略</h5><ol><li><p>指明partition的情况下，直接将指明的值作为partition的值；例如：partition&#x3D;0，所有数据写入分区0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4. 调用 send 方法,发送消息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 指定数据发送到 1 号分区，key 为空（IDEA 中 ctrl + p 查看参数）</span></span><br><span class="line">kafkaProducer.send(<span class="keyword">new</span>  <span class="title class_">ProducerRecord</span>&lt;&gt;(<span class="string">&quot;first&quot;</span>,<span class="number">1</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;atguigu &quot;</span> + i), </span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompletion</span><span class="params">(RecordMetadata metadata,Exception e)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (e == <span class="literal">null</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot; 主 题 ： &quot;</span>  +</span><br><span class="line">metadata.topic() + <span class="string">&quot;-&gt;&quot;</span> + <span class="string">&quot;分区：&quot;</span> + metadata.partition());</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>没有指明partition值但有key的情况下，将key的hash值与topic的partition数进行取余得到partition的值；例如：key1的hash值&#x3D;5，key2的hash值&#x3D;6，topic的分区数&#x3D;2，那么key1对应的value1写入1号分区，key2对应的value2写入0号分区</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4. 调用 send 方法,发送消息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 依次指定 key 值为 a,b,f ，数据 key 的 hash 值与 3 个分区求余，分别发往 1、2、0</span></span><br><span class="line">kafkaProducer.send(<span class="keyword">new</span>  <span class="title class_">ProducerRecord</span>&lt;&gt;(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;atguigu &quot;</span> + i), </span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCompletion</span><span class="params">(RecordMetadata metadata,Exception e)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (e == <span class="literal">null</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot; 主 题 ： &quot;</span>  +</span><br><span class="line">metadata.topic() + <span class="string">&quot;-&gt;&quot;</span> + <span class="string">&quot;分区：&quot;</span> + metadata.partition());</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>既没有partition值又没有key值的情况下，Kafka采用Sticky Partition（黏性分区器），会随机选择一个分区，并尽可能一直使用该分区，待该分区的batch已满或者已完成，Kafka再随机选一个分区进行使用（和上一次的分区不同）；例如：第一次随机选择0号分区，等0号分区当前批次满了（默认16k）或者linger.ms设置的时间到，Kafka再随机选择一个分区进行使用（如果还是0会继续随机）</p><blockquote><p>代码示例如–3.2.2 带回调函数的API代码</p></blockquote></li><li><p>自定义分区器</p><ol><li>定义类实现Partitioner接口</li><li>重写partition()方法</li><li>在生产者的配置对象中添加自定义分区器</li></ol></li></ol><p>例：实现一个分区器实现，发送过来的数据中如果包含 atguigu，就发往 0 号分区，不包含 atguigu，就发往 1号分区。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//setup1、setup2</span></span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.Partitioner;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.common.Cluster;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. 实现接口 Partitioner</span></span><br><span class="line"><span class="comment">* 2. 实现 3 个方法:partition,close,configure</span></span><br><span class="line"><span class="comment">* 3. 编写 partition 方法,返回分区号</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyPartitioner</span> <span class="keyword">implements</span> <span class="title class_">Partitioner</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 返回信息对应的分区</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> topic 主题</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> key 消息的 key</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> keyBytes 消息的 key 序列化后的字节数组</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> value 消息的 value</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> valueBytes 消息的 value 序列化后的字节数组</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cluster 集群元数据可以查看分区信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="type">int</span>  <span class="title function_">partition</span><span class="params">(String  topic,  Object  key,  <span class="type">byte</span>[] keyBytes, Object value, <span class="type">byte</span>[] valueBytes, Cluster cluster)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取消息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">msgValue</span> <span class="operator">=</span> value.toString();</span><br><span class="line">        <span class="comment">// 创建 partition</span></span><br><span class="line">        <span class="type">int</span> partition;</span><br><span class="line">        <span class="comment">// 判断消息是否包含 atguigu</span></span><br><span class="line">        <span class="keyword">if</span> (msgValue.contains(<span class="string">&quot;atguigu&quot;</span>))&#123;</span><br><span class="line">        partition = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        partition = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回分区号</span></span><br><span class="line">        <span class="keyword">return</span> partition;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭资源</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    <span class="comment">// 配置方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(Map&lt;String, ?&gt; configs)</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line"><span class="comment">//setup3</span></span><br><span class="line"><span class="comment">// 添加自定义分区器</span></span><br><span class="line">properties.put(ProducerConfig.PARTITIONER_CLASS_CONFIG,<span class="string">&quot;com.atguigu.kafka.producer.MyPartitioner&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="3-5-生产经验–生产者如何提高吞吐量"><a href="#3-5-生产经验–生产者如何提高吞吐量" class="headerlink" title="3.5 生产经验–生产者如何提高吞吐量"></a>3.5 生产经验–生产者如何提高吞吐量</h5><ol><li>修改batch.size大小，修改为32k</li><li>修改linger.ms等待时间，修改为5~100ms</li><li>修改compress.type压缩模式，修改为“snappy”</li><li>修改RecordAccumulator缓冲区大小，修改为64M</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// batch.size：批次大小，默认 16K</span><br><span class="line">properties.put(ProducerConfig.BATCH_SIZE_CONFIG, 16384);</span><br><span class="line">// linger.ms：等待时间，默认 0</span><br><span class="line">properties.put(ProducerConfig.LINGER_MS_CONFIG, 1);</span><br><span class="line">// RecordAccumulator：缓冲区大小，默认 32M：buffer.memory</span><br><span class="line">properties.put(ProducerConfig.BUFFER_MEMORY_CONFIG,33554432);</span><br><span class="line">// compression.type：压缩，默认 none，可配置值 gzip、snappy、lz4 和 zstd</span><br><span class="line">properties.put(ProducerConfig.COMPRESSION_TYPE_CONFIG,&quot;snappy&quot;);</span><br></pre></td></tr></table></figure><h5 id="3-6-生产经验–数据可靠性"><a href="#3-6-生产经验–数据可靠性" class="headerlink" title="3.6 生产经验–数据可靠性"></a>3.6 生产经验–数据可靠性</h5>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/">大数据</category>
      
      
      <category domain="http://example.com/tags/Kafka/">Kafka</category>
      
      
      <comments>http://example.com/2023/04/20/%E5%85%B3%E4%BA%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97Kafka%E7%9F%A5%E8%AF%86%E7%9A%84%E5%AD%A6%E4%B9%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>WEB前端基础知识的学习</title>
      <link>http://example.com/2023/04/19/WEB%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%9A%84%E5%AD%A6%E4%B9%A0/</link>
      <guid>http://example.com/2023/04/19/WEB%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%9A%84%E5%AD%A6%E4%B9%A0/</guid>
      <pubDate>Tue, 18 Apr 2023 16:21:08 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;关于”WEB前端“基础知识的学习&quot;&gt;&lt;a href=&quot;#关于”WEB前端“基础知识的学习&quot; class=&quot;headerlink&quot; title=&quot;关于”WEB前端“基础知识的学习&quot;&gt;&lt;/a&gt;关于”WEB前端“基础知识的学习&lt;/h2&gt;&lt;p&gt;​				你也许会问为什么我</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="关于”WEB前端“基础知识的学习"><a href="#关于”WEB前端“基础知识的学习" class="headerlink" title="关于”WEB前端“基础知识的学习"></a>关于”WEB前端“基础知识的学习</h2><p>​你也许会问为什么我会学习前端呢？难道是想成为一个全栈程序员，成为别人眼中的大佬？NO NO NO. 虽然我也想成为一个全栈程序员，更想成为大佬，但是目前–2023年4月18日21点37分42秒，学习前端只是为了满足课程基本要求。下面我将分享在学习前端基础时记的笔记。（此次课程学习了HTML+CSS+JavaScript，以及jQuery和Ajax）</p><h3 id="HTML："><a href="#HTML：" class="headerlink" title="HTML："></a>HTML：</h3><blockquote><p>网页的基本结构：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页</span><br><span class="line">titile中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页主要内容</span><br><span class="line">meta主要用于设置网页的一些元数据，元数据不是给用户看</span><br><span class="line">            charset 指定网页的字符集</span><br><span class="line">            name    指定数据的名称</span><br><span class="line">            content 指定的数据内容</span><br><span class="line">            keywords 表示网站的关键字，可以同时指定多个关键字，关键字间使用，隔开</span><br><span class="line">            description 用于指定网站的描述</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML5,CSS,前端&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;这是一个非常不错的网站&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3;url=https://www.baidu.com&quot;</span>&gt;</span>//页面将在3秒后重定向到百度网</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>meta<span class="tag">&lt;/<span class="name">title</span>&gt;</span>//title标签的内容会作为搜索结果的超链接上的文字显示</span><br><span class="line">body是html的子元素，表示网页的主体，网页中所有的可见内容都应该写在body里</span><br><span class="line">h1网页的一级标题</span><br></pre></td></tr></table></figure><blockquote><p>网页标签属性：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">属性，在标签中（开始标签或自结束标签）还可以设置属性</span><br><span class="line">属性是一个键值对（x=y）</span><br><span class="line">属性用来设置标签中的内容如何显示</span><br><span class="line"></span><br><span class="line">属性和标签名或其他属性应该使用空格隔开</span><br><span class="line">属性不能瞎写，应该根据文档中的规定来编写</span><br><span class="line">有些属性有属性值，有些没有。如果有属性值，属性值应该使用引号引起来</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是我的<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">size</span>=<span class="string">&quot;6&quot;</span>&gt;</span>第三个<span class="tag">&lt;/<span class="name">font</span>&gt;</span>网页！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>语义化标签：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">在网页中HTML专门用来负责网页的结构，所以在使用HTML标签时，应该关注的是标签的语义，而不是它的样式</span><br><span class="line">块元素（block element）</span><br><span class="line">-在网页中一般通过块元素来对页面进行布局</span><br><span class="line">行内元素（inline element）</span><br><span class="line">    -行内元素主要用来包裹文字</span><br><span class="line"></span><br><span class="line">    -一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素</span><br><span class="line">    -块元素中基本什么都能放</span><br><span class="line">    -p元素中不能放任何的块</span><br><span class="line"></span><br><span class="line">浏览器在解析网页时，会自动对网页中不符合规范的内容进行修正</span><br><span class="line">    比如：</span><br><span class="line">        标签写在了根元素的外部</span><br><span class="line">        p元素中嵌套了块元素</span><br><span class="line">        根元素中出现了head和body以外的子元素</span><br><span class="line">       ...</span><br><span class="line">常见块级元素：</span><br><span class="line">   div、form、h1~h6、hr、p（标识段落）、table、ul等</span><br><span class="line">常见内联元素：</span><br><span class="line">   a、b、em（加重语调）、i、span、strong（强调）等</span><br><span class="line">行内块级元素（特点：不换行、能够识别宽高）：</span><br><span class="line">   button、img、input等</span><br><span class="line">  </span><br><span class="line">hgroup标签用来为标签分组，可以将一组相关的标题同时放入到hgroup</span><br><span class="line">p标签标识页面中的一个段落</span><br><span class="line">em标签用于表示语音语调的一个加重</span><br><span class="line">strong表示强调，重要内容</span><br><span class="line">blockquote表示一个长引用</span><br><span class="line">q表示一个短引用</span><br><span class="line">br表示页面中的换行</span><br><span class="line">hr表示页面中出现一条水平线</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">布局标签（结构化语义标签）:</span><br><span class="line">header  表示网页的头部</span><br><span class="line">    main    表示网页的主体部分(一个页面中只会有一个main)</span><br><span class="line">    footer  表示网页的底部</span><br><span class="line">    nav     表示网页中的导航</span><br><span class="line">    aside   表示和主体相关的其他内容(侧边栏)</span><br><span class="line">    article 表示一个独立的文章</span><br><span class="line">    section 表示一个独立的区块，上边的标签不能表示时使用section</span><br><span class="line"></span><br><span class="line">    div 没有语义，就用来表示一个区块，目前来说div还是我们主要的布局元素</span><br><span class="line">    span    行内元素，没有任何的语义，一般用于在网页中选中文字</span><br></pre></td></tr></table></figure><blockquote><p>列表：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">列表（list）</span><br><span class="line">1、铅笔</span><br><span class="line">2、尺子</span><br><span class="line">3、橡皮</span><br><span class="line"></span><br><span class="line">在html中也可以创建列表，html列表一共有三种</span><br><span class="line">1、有序列表</span><br><span class="line">2、无序列表</span><br><span class="line">3、定义列表</span><br><span class="line"></span><br><span class="line">有序列表，使用ol标签来创建有序列表</span><br><span class="line">使用li表示列表项</span><br><span class="line"></span><br><span class="line">无序列表，使用ul标签来创建无序列表</span><br><span class="line">使用li表示列表项</span><br><span class="line"></span><br><span class="line">定义列表，使用dl标签来创建定义列表</span><br><span class="line">使用dt来表示定义的内容</span><br><span class="line">使用dd来对内容进行解释说明</span><br><span class="line"></span><br><span class="line">列表之间可以互相嵌套</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>表现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>行为<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>表现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>行为<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构用来表示网页的结构，结构用来规定网页中哪里是标题，哪里是段落<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>表格：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">表格标签：</span><br><span class="line">       表格:<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">       行:<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       单元格（列）:<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">表格属性：</span><br><span class="line">       border:设置表格的边框</span><br><span class="line">       width:设置表格的宽度</span><br><span class="line">       height:设置表格的高度</span><br><span class="line">       </span><br><span class="line">       示例：</span><br><span class="line">       <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>尚学堂<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>黑马<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>多易<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>阿里<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>京东<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>腾讯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">快捷键生成表格：</span><br><span class="line">            table&gt;tr*2&gt;td*3&#123;文本信息&#125;</span><br></pre></td></tr></table></figure><blockquote><p>表格的合并：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">水平合并：colspan--保留左边，删除右边</span><br><span class="line">垂直合并：rowspan--保留上边，删除下边</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>单元格6单元格7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>form表单：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">表单是由容器和控件组成的，一个表单一般应该包含用户填写的信息的输入框，提交按钮等，</span><br><span class="line">这些输入框，按钮叫做控件，表单就是容器，它能够容纳各种各样的控件</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get | post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;myform&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">action服务器地址</span><br><span class="line">    name表单名称</span><br><span class="line">    method中get和post的区别：</span><br><span class="line">       数据提交方式，get把提交的数据url可以看到，post看不到</span><br><span class="line">       get一般用于提交少量数据，post用来提交大量数据</span><br></pre></td></tr></table></figure><blockquote><p>超链接：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">超链接可以让我们从一个页面跳转到另一个页面，或者是当前页面的其他的位置</span><br><span class="line">    使用a标签来定义超链接</span><br><span class="line">         属性：</span><br><span class="line">         href 指定跳转的目标路径</span><br><span class="line">             -值可以是一个外部网站的地址</span><br><span class="line">             -也可以写一个内部页面的地址</span><br><span class="line">        超链接也是一个行内元素，在a标签中可以嵌套除它自身外任何的元素</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">target属性：用来指定超链接打开的位置</span><br><span class="line">             可选值：</span><br><span class="line">             -self 默认值在当前页面中打开超链接</span><br><span class="line">             _blank 在一个新的页面中打开超链接</span><br></pre></td></tr></table></figure><p>内联框架：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">内联框架，用于向当前页面中引入一个其他的页面</span><br><span class="line">       src 指定要引入的网页的路径</span><br><span class="line">       frameborder 指定内联框架的边框</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.qq.com&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS:"></a>CSS:</h3><p>网页实际是一个多层的结构，通过CSS可以分别为网页的每一层来<em><strong>设置样式</strong></em>，而最终我们能看到只是网页的最上边一层</p><blockquote><p>使用CSS来设置样式的三种方式：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">第一种方式：(内联样式，行内样式)</span><br><span class="line">     -在标签内部通过style属性来设置元素的样式</span><br><span class="line">     -问题：</span><br><span class="line">          使用内联样式，样式只能对一个标签生效，如果希望影响到多个元素必须在每一个元素中都复制一遍</span><br><span class="line">          并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便</span><br><span class="line">     -注意：开始时绝对不要使用内联样式</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red; font-size: 30px;&quot;</span>&gt;</span>少小离家老大回，乡音无改鬓毛衰<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第二种方式(内部样式)：</span><br><span class="line">     -将样式编写到head中的style标签里</span><br><span class="line">          然后通过CSS的选择器来选中元素并为其设置各种样式</span><br><span class="line">          可以同时为多个标签设置样式，并且修改只需要修改一处即可全部应用</span><br><span class="line">     -内部样式表更加方便对样式进行复用</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#00FF00</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>落霞与孤鹜齐飞，秋水共长天一色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第三种方式（外部样式表） 最佳实践</span><br><span class="line">     -可以将css样式编写到一个外部的css文件中</span><br><span class="line">          然后通过link标签来引入外部的css文件</span><br><span class="line">     -外部样式表需要通过link标签进行引入，</span><br><span class="line">          意味着只要想使用这些样式的网页都可以对其进行引用</span><br><span class="line">          使样式可以在不同页面之间进行复用</span><br><span class="line">     -将样式编写到外部的css文件中，可以使用到浏览器的缓存机制</span><br><span class="line">          从而加快网页的加载速度，提高用户的体验</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>选择器：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 全局选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            可以与任何元素匹配，优先级最低，一般做样式初始化 */</span></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 元素选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            所有的标签，都可以是选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            标签选择器，选择的是页面上所有这种类型的标签，所以经常描述“共性”，无法描述某一个元素的“个性” */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 类选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            规定用圆点.来定义，针对你想要的所有标签使用</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            class属性的特点：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                类选择器可以被多种标签使用</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                类名不能以数字开头</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                同一个标签可以使用多个类选择器，用空格隔开 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.oneclass</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.content</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>HELLO<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;oneclass&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;oneclass content&quot;</span>&gt;</span>世界<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>World<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* ID选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            针对某一个特定的标签来使用，只能使用一次。CSS中的ID选择器以#来定义</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            ID是唯一的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            ID不能以数字开头 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#mytitle</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">3px</span> dashed green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 合并选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            语法：选择器1,选择器2,...&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            作用：提取共同的样式，减少重复代码 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>,<span class="selector-tag">h3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 选择器的优先级：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            CSS中，权重用数字衡量</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            元素选择器的权重为：1</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            类选择器的权重为：10</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            ID选择器的权重为：100</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            内联样式的权重为：1000</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            优先级从高到低：行内样式&gt;ID选择器&gt;类选择器&gt;元素选择器 */</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">关系选择器：</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 后代选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            定义：选择所有被E元素包含的F元素，中间用空格隔开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            E F&#123;&#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 子代选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择所有作为E元素的直接子元素F，对更深一层的元素不起作用，用&gt;表示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            E&gt;F&#123;&#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 相邻兄弟选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择紧跟E元素后的F元素，选择相邻的第一个兄弟元素，用+号表示</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            E+F&#123;&#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>+<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 通用兄弟选择器：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            选择E元素之后的所有兄弟元素F，作用于多个元素，用~隔开</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            E~F&#123;&#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h3</span>~<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125; </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>盒子模型：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 盒子模型：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            Margin(外边距)-清除边框外的区域，外边距是透明的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            Border(边框)-围绕在内边距和内容外的边框</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            Padding(内边距)-清除内容周围的区域</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            Content(内容)-盒子的内容，显示文本和图像 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid gray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 弹性盒子模型：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            弹性盒子由弹性容器（Flex container）和弹性子元素（Flex item）组成</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            弹性容器通过设置display属性的值为flex将其定义为弹性容器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            弹性容器内包含了一个或多个弹性子元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#555</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 定义为弹性容器 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置各个子元素摆放方式*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: row-reverse;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置子元素水平摆放位置*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置子元素垂直摆放位置*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;   </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>浮动以及清除浮动：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">浮动的定义：</span><br><span class="line">     float属性定义在哪个方向浮动，任何元素都可以浮动</span><br><span class="line">浮动的原理：</span><br><span class="line">     浮动以后使元素脱离了文档流</span><br><span class="line">     浮动只有左右浮动，没有上下浮动</span><br><span class="line"> 元素向左浮动：</span><br><span class="line">         脱离文档流之后，元素相当于在页面上面增加一个浮层来放置内容。此时可以理解为有两层页面，</span><br><span class="line">         一层是底层的原页面，一层是脱离文档流的上层页面，所以会出现折叠现象。</span><br><span class="line">     <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blueviolet;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">浮动副作用：</span><br><span class="line">     浮动元素会造成父元素高度塌陷</span><br><span class="line">     后续元素会受到影响</span><br><span class="line">        </span><br><span class="line">     清除浮动：</span><br><span class="line">         当父元素出现塌陷的时候，对布局是不利的，所以我们必须清除副作用</span><br><span class="line">         解决方案有很多种：</span><br><span class="line">                父元素设置高度</span><br><span class="line">                受影响的元素增加clear属性</span><br><span class="line">                父级标签的样式添加overflow清除浮动</span><br><span class="line">                伪对象方式</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: 500px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#888</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            clear: both; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.text</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blueviolet;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>动画：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">直接演示一波：</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: myAnim <span class="number">3s</span> linear <span class="number">0s</span> infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-play-state</span>: paused;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> myAnim &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript："><a href="#JavaScript：" class="headerlink" title="JavaScript："></a>JavaScript：</h3><p>JavaScript的引入方式和CSS十分类似</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在内部编写javascript--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script&gt;</span></span><br><span class="line"><span class="comment">        alert(&quot;hello js&quot;);        </span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--链接外部的js文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./demo.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>输出语句：</p></blockquote><ul><li>使用windows.alert()写入警告框</li><li>使用document.write()写入HTML输出</li><li>使用console.log()写入浏览器控制台</li></ul><blockquote><p>变量&amp;数据类型：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">JavaScript是弱类型语言</span><br><span class="line">    用var关键字来声明变量</span><br><span class="line"></span><br><span class="line">    ECMAScript 6 新增了 let 关键字来定义变量</span><br><span class="line">    ECMAScript 6 新增了 const 关键字来定义一个只读的常量，一旦声明，就不能更改常量的值。</span><br><span class="line">    </span><br><span class="line">    var:</span><br><span class="line">       1、作用域：全局变量</span><br><span class="line">       2、变量可以重复定义</span><br><span class="line">            </span><br><span class="line">    let:</span><br><span class="line">       1、作用域：局部变量</span><br><span class="line">       2、变量不可以重复定义</span><br><span class="line">       </span><br><span class="line">JavaScript中分为：原始类型和引用类型</span><br><span class="line">        5种原始类型：</span><br><span class="line">            numbe：数字（整数、小数、NaN（Not a Number））</span><br><span class="line">            string：字符、字符串，单引号、双引号皆可</span><br><span class="line">            boolean：布尔</span><br><span class="line">            null：对象为空，null被认为是对象的占位符，使用typeof运算符会返回“Object”</span><br><span class="line">            undefined：当声明的变量未初始化时，该变量的默认值是undefined</span><br><span class="line"></span><br><span class="line">        引用类型，合成数据类型，复合数据类型：object（对象）</span><br><span class="line">        var user = &#123;</span><br><span class="line">            age:18,</span><br><span class="line">            name:&quot;iwen&quot;,</span><br><span class="line">            hunyin:flase</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        使用typeof运算符可以获取数据类型</span><br><span class="line">        alter(typeof age) </span><br></pre></td></tr></table></figure><blockquote><p>window窗口对象：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Window</span><br><span class="line">      window：获取窗口对象</span><br><span class="line">      获取：直接使用window，其中 window. 可以省略</span><br><span class="line">      window.alert(&quot;abc&quot;)  --&gt; alert(&quot;abc&quot;)</span><br><span class="line"></span><br><span class="line">      方法：</span><br><span class="line">          alert()     显示带有一段消息和一个确认按钮的警告框</span><br><span class="line">          confirm()   显示带有一段消息以及确认按钮和取消按钮的对话框  --&gt; 点击确认会返回true，点击取消会返回false</span><br><span class="line">          setInterval(function,毫秒值)按照指定的周期（以毫秒计）来调用函数或计算表达式，循环执行</span><br><span class="line">          setTimeout(function,毫秒值)在指定的毫秒数后调用函数或计算表达式，只执行一次</span><br></pre></td></tr></table></figure><blockquote><p>数组方法：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Array.isArray()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Array.isArray方法返回一个布尔值，表示参数是否为数组。它可以弥补typeof运算符的不足。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr1 = [<span class="string">&quot;尚学堂&quot;</span>,<span class="number">100</span>,<span class="literal">true</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr1));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// push()/pop()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// push方法用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意：该方法会改变原数组。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// pop方法用于删除数组的最后一个长度，并返回该元素。注意：该方法会改变原数组。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr2 = [];</span></span><br><span class="line"><span class="language-javascript">    arr2.<span class="title function_">push</span>(<span class="string">&quot;尚学堂&quot;</span>); <span class="comment">// 1</span></span></span><br><span class="line"><span class="language-javascript">    arr2.<span class="title function_">push</span>(<span class="string">&#x27;itbaizhan&#x27;</span>); <span class="comment">// 2</span></span></span><br><span class="line"><span class="language-javascript">    arr2.<span class="title function_">push</span>(<span class="literal">true</span>,&#123;&#125;); <span class="comment">// 4</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr3 = [<span class="string">&#x27;尚学堂&#x27;</span>,<span class="string">&#x27;itbaizhan&#x27;</span>,<span class="string">&#x27;WEB前端&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">    arr3.<span class="title function_">pop</span>(); <span class="comment">// &#x27;WEB前端&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr3);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// shift()/unshift()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// shift方法用于删除数组的第一个元素，并返回该元素。注意，该方法会改变数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// unshift方法用于在数组的第一个位置添加元素，并返回添加新元素后的数组长度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr4 = [<span class="string">&#x27;尚学堂&#x27;</span>,<span class="string">&#x27;itbaizhan&#x27;</span>,<span class="string">&#x27;WEB前端&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">    arr4.<span class="title function_">shift</span>(); <span class="comment">// &#x27;尚学堂&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr4);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// shift方法去清空一个数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> item;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">while</span> (item = arr4.<span class="property">shift</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr4);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr5 = [<span class="string">&#x27;尚学堂&#x27;</span>,<span class="string">&#x27;itbaizhan&#x27;</span>,<span class="string">&#x27;WEB前端&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">    arr5.<span class="title function_">unshift</span>(<span class="string">&#x27;baizhan&#x27;</span>); <span class="comment">// 4</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr5);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// unshift方法可以接受多个参数，这些参数都会添加到目标数组头部</span></span></span><br><span class="line"><span class="language-javascript">    arr5.<span class="title function_">unshift</span>(<span class="string">&#x27;测试&#x27;</span>,<span class="string">&#x27;JavaScript&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr5);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// join()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// join方法以指定参数作为分隔符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr6 = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr6.<span class="title function_">join</span>()); <span class="comment">// 10,20,30,40</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr6.<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>)); <span class="comment">// 10|20|30|40</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// concat()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// concat方法用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr7 = [<span class="string">&#x27;hello&#x27;</span>].<span class="title function_">concat</span>([<span class="string">&#x27;world&#x27;</span>],[<span class="string">&#x27;!&#x27;</span>]);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr7);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 除了数组作为参数，concat也接受其他类型的值作为参数，添加到目标数组后部。</span></span></span><br><span class="line"><span class="language-javascript">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].<span class="title function_">concat</span>(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// indexOf()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// indexOf方法返回给定元素在数组中第一次出现的位置，如果没有出现则返回-1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> arr8 = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">    arr8.<span class="title function_">indexOf</span>(<span class="string">&#x27;b&#x27;</span>); <span class="comment">// 1</span></span></span><br><span class="line"><span class="language-javascript">    arr8.<span class="title function_">indexOf</span>(<span class="string">&#x27;y&#x27;</span>); <span class="comment">// -1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// indexOf方法还可以接受第二个参数，表示搜索的开始位置</span></span></span><br><span class="line"><span class="language-javascript">    [<span class="string">&#x27;尚学堂&#x27;</span>,<span class="string">&#x27;百战程序员&#x27;</span>,<span class="string">&#x27;itbaizhan&#x27;</span>].<span class="title function_">indexOf</span>(<span class="string">&#x27;尚学堂&#x27;</span>,<span class="number">1</span>); <span class="comment">// -1</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>函数：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 函数是一段可以反复调用的代码块</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 函数的声明：</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     function命令：function命令声明的代码区块，就是一个函数。function命令后面是函数名，函数名后面是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">x,y</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;结果:&quot;</span>,x+y);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">add</span>(<span class="number">1</span>,<span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>CSS操作：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// HTML元素的style属性</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 操作CSS样式最简单的方法，就是使用网页元素节点的setAttribute方法直接操作网页元素的style属性</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;box&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// box.setAttribute(&quot;style&quot;,&quot;width:200px;height:200px;background:red;&quot;)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// box.style.width = &quot;300px&quot;;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// box.style.height = &quot;300px&quot;;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// box.style.backgroundColor = &quot;red&quot;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;width:200px;height:200px;background:red;&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jQuery："><a href="#jQuery：" class="headerlink" title="jQuery："></a>jQuery：</h3><blockquote><p>第一个例子：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>第一个例子<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.6.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&quot;Hello jQuery&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//简便写法</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;Hello jQuery&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​1.(document),是jQuery中的函数名称，document是函数的参数，作用是将document对象 变成 jQuery函数库可以使用的对象。2.ready是jQuery中的函数，是准备的意思，当页面的dom对象加载成功后，会执行ready函数的内容。ready相当于js中的onLoad事件</p><blockquote><p>dom对象 与 jQuery对象的互转：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;我是按钮&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;btnClick()&quot;</span>&gt;</span></span><br><span class="line">function btnClick()&#123;</span><br><span class="line">            //获取dom对象</span><br><span class="line">            var obj = document.getElementById(&quot;btn&quot;);</span><br><span class="line">            //使用dom的value属性来获取值</span><br><span class="line">            alert(&quot;使用dom对象的属性=&quot;+obj.value);</span><br><span class="line">            //把dom对象转jQuery，使用jQuery库中的函数</span><br><span class="line">        var $jObj = $(obj);</span><br><span class="line">        //调用jQuery中的函数，获取value的值</span><br><span class="line">        alert($jObj.val())</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;计算平方&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;btnClick()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;整数&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">function btnClick()&#123;</span><br><span class="line">            //使用jQuery的语法，获取页面中的dom对象</span><br><span class="line">            //var obj = $(&quot;#txt&quot;)[0];   //从数组中获取下标为0的dom对象（jQuery对象是一个数组）</span><br><span class="line">            var obj = $(&quot;#txt&quot;).get(0);   //从数组中获取下标为0的dom对象（jQuery对象是一个数组）</span><br><span class="line">            //alert(obj.value)</span><br><span class="line">            var num = obj.value;</span><br><span class="line">            obj.value = num * num;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>事件：</p></blockquote><pre><code>  1.定义元素监听事件 ：  语法：$(选择器).监听事件名称(处理函数)  说明：监听事件名称是js事件中去掉on后的内容，js中的onclick的监听事件名称是click    例如：  为页面中所有的button绑定onclick，并关联处理函数func1  $(&quot;button&quot;).click(func1)  为页面中所有的tr标签绑定onmouseover，并关联处理函数func2  $(&quot;tr&quot;).mouseover(func2)    $(&quot;#btn&quot;).click(function()&#123;   alert(&quot;处理按钮单击&quot;)   &#125;)    2.on()绑定事件  on()方法在被选元素上添加事件处理程序。该方法给API带来很多便利，推荐使用该方法  语法：$(选择器).on(event,function)  event：事件一个或多个，多个之间空格分开  function：可选，规定当事件发生时运行的函数  $(&quot;#btn&quot;).on(&quot;click&quot;,function()&#123; alert(&quot;处理按钮单击&quot;) &#125;)</code></pre><blockquote><p>基本选择器：</p></blockquote><p>​根据id，class属性，标签类型名定位HTML元素，转为jQuery对象，下面通过代码演示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: gray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">text</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.6.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">text</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//id选择器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> obj1 = $(<span class="string">&quot;#one&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用jQuery中改变样式的函数</span></span></span><br><span class="line"><span class="language-javascript">            obj1.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;red&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//class选择器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> obj2 = $(<span class="string">&quot;.two&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//使用jQuery中改变样式的函数</span></span></span><br><span class="line"><span class="language-javascript">        obj2.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;yellow&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//class选择器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> obj3 = $(<span class="string">&quot;div&quot;</span>)    <span class="comment">//数组有3个对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//使用jQuery中改变样式的函数</span></span></span><br><span class="line"><span class="language-javascript">        obj3.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;blue&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> obj4 = $(<span class="string">&quot;*&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        obj4.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;green&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>我是one的div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>我是样式是two的div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是没有id，class的div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是span标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取id是one的dom对象&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取class是two的dom对象&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun2()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取标签是div的dom对象&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun3()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;全部选择器&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun4()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>表单选择器：</p></blockquote><pre><code>    使用&lt;input&gt;标签的type属性值，定位dom对象的方式    语法：$(&quot;:type 属性值&quot;)        例如：$(&quot;:text&quot;)，选择的是所有的单行文本框     $(&quot;:button&quot;)，选择的是所有的按钮</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.6.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">func1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用表单选择器 $(&quot;:type的值&quot;)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> obj = $(<span class="string">&quot;:text&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取value属性的值</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(obj.<span class="title function_">val</span>());</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">func2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定位radio</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> obj = $(<span class="string">&quot;:radio&quot;</span>);  <span class="comment">//数组，目前是两个对象 man、woman</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//循环数组</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;obj.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//从数组中获取成员，使用下标的方式</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> dom = obj[i];</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用dom对象的属性，获取value值</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(dom.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;我是type=text&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>/&gt;</span>男 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>/&gt;</span>女 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bike&quot;</span>/&gt;</span>骑行<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;football&quot;</span>/&gt;</span>足球<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;music&quot;</span>/&gt;</span>音乐<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;读取text的值&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;func1()&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;读取radio的值&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;func2()&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>基本过滤器：</p></blockquote><pre><code>    1、选择第一个first，保留数组中的第一个dom对象        $(&quot;选择器:first&quot;)    2、选择最后一个last，保留数组中的最后一个dom对象        $(&quot;选择器:last&quot;)    3、选择数组中指定对象        $(&quot;选择器:eq(数组索引)&quot;)    4、选择数组中小于指定索引的所有dom对象        $(&quot;选择器:lt(指定索引)&quot;)</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">text</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.6.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">text</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//过滤器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> obj = $(<span class="string">&quot;div:first&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                obj.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;red&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>我是div-0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>我是div-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div-2</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div-5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取第一个div&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>表单属性过滤器：</p></blockquote><pre><code>    1、选择可用的文本框         $(&quot;:text:enabled&quot;)    2、选择不可用的文本框        $(&quot;:text:disabled&quot;)    3、复选框选中的元素        $(&quot;:checkbox:checked&quot;)    4、选择指定下拉列表的被选中元素        选择器&gt;option:selected</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.6.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> obj = $(<span class="string">&quot;:text:enabled&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                obj.<span class="title function_">val</span>(<span class="string">&quot;hello&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn2&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> obj = $(<span class="string">&quot;:checkbox:checked&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;obj.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(obj[i].<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn3&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> obj = $(<span class="string">&quot;select&gt;option:selected&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(obj.<span class="title function_">val</span>())</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文本框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txt1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txt2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text2&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txt3&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txt4&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text4&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>复选框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;游泳&quot;</span>&gt;</span>游泳<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;健身&quot;</span> <span class="attr">checked</span>&gt;</span>健身<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;电子游戏&quot;</span> <span class="attr">checked</span>&gt;</span>电子游戏<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;语言&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;java&quot;</span> <span class="attr">selected</span>&gt;</span>java语言<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;python&quot;</span>&gt;</span>python语言<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;c&quot;</span>&gt;</span>c语言<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>功能按钮<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;设置可用的text的value是hello&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn2&quot;</span>&gt;</span>显示被选中的复选框中的值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn3&quot;</span>&gt;</span>显示选中下拉列表框的值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>函数：</p></blockquote><pre><code>    1、val    操作数组中dom对象的value属性    $(选择器).val()：无参数调用形式，读取数组中第一个dom对象的value属性值    $(选择器).val(值)：有参形式调用；对数组中所有dom的value属性进行统一赋值    2、text    操作数组中所有的dom对象的【文字显示内容属性】    $(选择器).text()：无参数调用，读取数组中所有dom对象的文字显示内容，将得到的内容拼接为一个字符串返回    $(选择器).text(值)：有参数形式，对数组中所有dom对象的文字显示内容进行统一赋值    3、attr    对val、text之外的其他属性操作    $(选择器).attr(&quot;属性名&quot;):获取dom数组第一个对象的属性值    $(选择器).attr(&quot;属性名&quot;,&quot;值&quot;):对数组中所有dom对象的属性设为新值    4、remove    $(选择器).remove()：将数组中所有dom对象及其子对象一并删除    5、empty    $(选择器).empty():将数组中所有dom对象的子对象删除    6、append    为数组中所有dom对象添加子对象    $(选择器).append(&quot;&lt;div&gt;我动态添加的div&lt;/div&gt;&quot;)    7、html    设置或返回被选元素的内容（innerHTML--html文件中写的内容）    $(选择器).html()：无参数调用，获取dom数组第一个匹配元素的内容    $(选择器).html(值)：有参数调用，用于设置dom数组中所有元素的内容    8、each    each是对数组，json 和 dom数组等的遍历，对每个元素调用一次函数    语法1：$.each( 要遍历的对象，function(index,element) &#123;处理程序&#125; )    语法2：jQuery对象.each( function(index,element) &#123;处理程序&#125; )    $：相当于java的一个类名    each：就是类中的静态方法    index：数组的下标    element：数组的对象</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.6.4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//使用remove：删除父和子所有的dom对象</span></span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;select&quot;</span>).<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn2&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用empty：删除子dom对象</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;select&quot;</span>).<span class="title function_">empty</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn3&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用append(值)：增加dom对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//$(&quot;#fatcher&quot;).append(&quot;&lt;input type=&#x27;button&#x27; value=&#x27;我是增加的按钮&#x27;/&gt;&quot;);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//增加一个table</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#fatcher&quot;</span>).<span class="title function_">append</span>(<span class="string">&quot;&lt;table border=1&gt;&lt;tr&gt;&lt;td&gt;第一列&lt;/td&gt;&lt;td&gt;第二列&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn4&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用html()：获取数组中第一个dom对象的文本值（innerHTML）</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>($(<span class="string">&quot;span&quot;</span>).<span class="title function_">html</span>());</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn5&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//使用html(值)：设置所有选中dom对象的文本值</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;span&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;我是新的&lt;b&gt;数据&lt;/b&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn6&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//循环普通数组</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">each</span>(arr,<span class="keyword">function</span>(<span class="params">index,element</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;循环变量：&quot;</span>+index+<span class="string">&quot;====数组成员&quot;</span>+element);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn7&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//循环json</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> json = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">21</span>&#125;;</span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">each</span>(json,<span class="keyword">function</span>(<span class="params">i,n</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;i是key=&quot;</span>+i+<span class="string">&quot;，n是value=&quot;</span>+n);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#btn8&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//循环json</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> domArray = $(<span class="string">&quot;:text&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//语法1</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// $.each(domArray,function(i,n)&#123;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//     //n是数组中的dom对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//     alert(&quot;i=&quot;+i+&quot;，n=&quot;+n.value);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//语法2</span></span></span><br><span class="line"><span class="language-javascript">            domArray.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i,n</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;i=&quot;</span>+i+<span class="string">&quot;，n=&quot;</span>+n.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;刘备&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;关羽&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张飞&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;老虎&quot;</span>&gt;</span>老虎<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;狮子&quot;</span>&gt;</span>狮子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;豹子&quot;</span>&gt;</span>豹子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;亚洲&quot;</span>&gt;</span>亚洲<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;美洲&quot;</span>&gt;</span>美洲<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;欧洲&quot;</span>&gt;</span>欧洲<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;fatcher&quot;</span>&gt;</span>我是第一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是mysql<span class="tag">&lt;<span class="name">b</span>&gt;</span>数据库<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是jdbc<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span>使用remove删除父和子对象<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn2&quot;</span>&gt;</span>使用empty删除子对象<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn3&quot;</span>&gt;</span>使用append增加dom对象<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn4&quot;</span>&gt;</span>获取第一个dom的文本值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn5&quot;</span>&gt;</span>设置span的所有dom的文本值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn6&quot;</span>&gt;</span>循环普通数组<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn7&quot;</span>&gt;</span>循环json<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn8&quot;</span>&gt;</span>循环dom数组<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax:"></a>Ajax:</h3><blockquote><p>ajax函数：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1）$.ajax()：jQuery中实现ajax的核心函数</span><br><span class="line">2）$.post()：使用post方式发送ajax请求</span><br><span class="line">3）$.get()：使用get方式发送ajax请求</span><br><span class="line"></span><br><span class="line">$.post() 和 $.get() 内部都是调用的 $.ajax()</span><br></pre></td></tr></table></figure><blockquote><p>$.ajax()函数的使用：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">函数的参数表示请求的url、请求的方式、参数值、回调方法等信息。参数是一个json结构。</span><br><span class="line">例如：$.ajax( &#123; 名称1:值1, 名称2:值2...&#125; )</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">$.ajax( &#123;</span><br><span class="line">async:true,</span><br><span class="line">contentType:&quot;application/json&quot;,</span><br><span class="line">data:&#123;&quot;name&quot;:&quot;zhangsan&quot;,&quot;age&quot;:21&#125;,</span><br><span class="line">dataType:&quot;json&quot;,</span><br><span class="line">error:function()&#123;</span><br><span class="line">请求出现错误时，执行的函数</span><br><span class="line">&#125;,</span><br><span class="line">success:function(data)&#123;</span><br><span class="line">//data 就是responseText，是jQuery处理后的数据</span><br><span class="line">请求成功时，执行的函数</span><br><span class="line">&#125;,</span><br><span class="line">url:&quot;www.baidu.com&quot;,</span><br><span class="line">type:&quot;get&quot;</span><br><span class="line">&#125; )</span><br><span class="line"></span><br><span class="line">async：布尔值，表示请求是否异步处理。默认是true</span><br><span class="line">contentType：发送数据到服务器时所使用的数据类型，可以不写。例如application/json</span><br><span class="line">data：规定要发送到服务器的数据，可以是：字符串、数组，多数是json</span><br><span class="line">dataType：期望从服务器响应的数据类型</span><br><span class="line">error()：如果请求失败要运行的函数</span><br><span class="line">success(resp)：当请求成功时运行的函数，其中resp是自定义的形参名</span><br><span class="line">type：规定请求的类型（GET或POST等）。默认是GET,GET/POST不区分大小写</span><br><span class="line">url：规定发送请求的url</span><br></pre></td></tr></table></figure><blockquote><p>$.get() 和 $.post() 函数的使用：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$.get()方法使用 HTTP GET请求从服务器加载数据</span><br><span class="line">$.post()方法使用 HTTP POST请求从服务器加载数据</span><br><span class="line">语法：$.get(url,data,function(resp),dataType)</span><br><span class="line"> $.post(url,data,function(resp),dataType)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/web/">web</category>
      
      
      <category domain="http://example.com/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      <comments>http://example.com/2023/04/19/WEB%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%9A%84%E5%AD%A6%E4%B9%A0/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
